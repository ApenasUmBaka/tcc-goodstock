openapi: 3.0.0
info:
  title: Goodstock API
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: Customers
    description: All routes related to the the customers API.
  - name: Organizations
    description: All routes related to the customers API, using the organizations functions.
  - name: Products
    description: All routes related to the Products API.
  - name: Sales
    description: All routes related to the Sales API.
paths:
  # Customers API
  /customers/customers/:
    get:
      tags:
        - Customers
      summary: Get an existing customer by email or id.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            example: email@domain.com
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid email or id.
      security:
        - bearerAuth: [read]

  /customers/customers/auth:
    get:
      tags:
        - Customers
      summary: Try to auth a customer.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
            example: email@domain.com
        - in: query
          name: password
          required: true
          schema:
            type: string
            example: password123
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid email.
        "401":
          description: Invalid password.
      security:
        - bearerAuth: [read]

  /customers/customers/{id}:
    get:
      tags:
        - Customers
      summary: Get an existing customer by email or id.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid email or id.
      security:
        - bearerAuth: [read]

    post:
      tags:
        - Customers
      summary: Try to create a new customer.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomer"
      responses:
        "201":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid customer.
      security:
        - bearerAuth: [write]
    patch:
      tags:
        - Customers
      summary: Try to update a customer.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomer"
      responses:
        "201":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid customer.
      security:
        - bearerAuth: [write]

  /customers/customers/{id}/auth/:
    get:
      tags:
        - Customers
      summary: Try to auth a customer.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: password
          required: true
          schema:
            type: string
            example: password123
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientCustomer"
        "400":
          description: Invalid email.
        "401":
          description: Invalid password.
      security:
        - bearerAuth: [read]

  /organizations/organizations/:
    get:
      tags:
        - Organizations
      summary: Try to get a organization.
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
            example: organization A
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid name.
      security:
        - bearerAuth: [read]
    post:
      tags:
        - Organizations
      summary: Try to create a new organization.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostOrganization"
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid name or master password.
      security:
        - bearerAuth: [write]

  /organizations/organizations/auth:
    get:
      tags:
        - Organizations
      summary: Try to auth an organization.
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: masterPassword
          required: true
          schema:
            type: string
            example: password123
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid id.
        "401":
          description: Invalid password.
      security:
        - bearerAuth: [read]

  /organizations/organizations/{id}:
    get:
      tags:
        - Organizations
      summary: Try to get an organization.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid id.
      security:
        - bearerAuth: [read]
    patch:
      tags:
        - Organizations
      summary: Try to update an organization.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid id.
      security:
        - bearerAuth: [write]

  /organizations/organizations/{id}/auth:
    get:
      tags:
        - Organizations
      summary: Try to auth an organization.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientOrganization"
        "400":
          description: Invalid id.
      security:
        - bearerAuth: [read]

components:
  schemas:
    # Customers
    # Request Schemas
    PostCustomer:
      type: object
      required:
        - name
        - email
        - password
        - organizationId
      properties:
        name:
          type: string
          example: Joel
        email:
          type: string
          example: email@domain.com
        password:
          type: string
          example: password123
        organizationId:
          type: integer
          format: int32

    PatchCustomer:
      type: object
      properties:
        name:
          type: string
          example: Joel
        email:
          type: string
          example: email@domain.com
        password:
          type: string
          example: password123

    # Organizations
    PostOrganization:
      type: object
      properties:
        name:
          type: string
          example: Organization A
        masterPassword:
          type: string
          example: password123

    PatchOrganization:
      type: object
      properties:
        name:
          type: string
          example: Organization A
        masterPassword:
          type: string
          example: password123

    # Response Schemas
    ClientCustomer:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: string
          example: Success
        data:
          type: object
          required:
            - id
            - email
            - organizationId
          properties:
            id:
              type: integer
              format: int32
            name:
              type: string
              example: Joel
            email:
              type: string
              example: email@domain.com
            organizationId:
              type: integer
              format: int32

    ClientOrganization:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: string
          example: Success
        data:
          type: object
          required:
            - id
            - name
          properties:
            id:
              type: integer
              format: int32
            name:
              type: string
              example: Organization A

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth:
      - read
      - write
